/// <reference types="react" />
import PropTypes from 'prop-types';
import { MultipleValueTextInputProps } from '../types';
/**
 * A text input component for React which maintains and displays a collection
 * of entered values as an array of strings.
 */
declare function MultipleValueTextInput({ placeholder, label, name, deleteButton, onItemAdded, onItemDeleted, className, labelClassName, submitKeys, values: initialValues, shouldAddOnBlur, ...forwardedProps }: MultipleValueTextInputProps): JSX.Element;
declare namespace MultipleValueTextInput {
    var propTypes: {
        /** Any values the input's collection should be prepopulated with. */
        values: PropTypes.Requireable<(string | null | undefined)[]>;
        /** Method which should be called when an item is added to the collection */
        onItemAdded: PropTypes.Validator<(...args: any[]) => any>;
        /** Method which should be called when an item is removed from the collection */
        onItemDeleted: PropTypes.Validator<(...args: any[]) => any>;
        /** Label to be attached to the input, if desired */
        label: PropTypes.Requireable<string>;
        /** Name attribute for the input */
        name: PropTypes.Validator<string>;
        /** Placeholder attribute for the input, if desired */
        placeholder: PropTypes.Requireable<string>;
        /** ASCII charcode for the keys which should
         * trigger an item to be added to the collection (defaults to comma (44) and Enter (13))
         */
        submitKeys: PropTypes.Requireable<(string | null | undefined)[]>;
        /** JSX or string which will be used as the control to delete an item from the collection */
        deleteButton: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        /** Whether or not the blur event should trigger the added-item handler */
        shouldAddOnBlur: PropTypes.Requireable<boolean>;
        /** Custom class name for the input element */
        className: PropTypes.Requireable<string>;
        /** Custom class name for the input label element */
        labelClassName: PropTypes.Requireable<string>;
    };
}
export default MultipleValueTextInput;
