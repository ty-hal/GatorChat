{
  "version": 3,
  "sources": ["../src/components/MultipleValueTextInput.tsx", "esbuild-css-modules-plugin-namespace:/tmp/tmp-1946-ib7oWWqB0moa/react-multivalue-text-input/src/components/MultipleValueTextInput.module.css.js", "../src/components/MultipleValueTextInputItem.tsx", "esbuild-css-modules-plugin-namespace:/tmp/tmp-1946-HlbQSLzopljN/react-multivalue-text-input/src/components/MultipleValueTextInputItem.module.css.js", "../src/index.tsx"],
  "sourcesContent": ["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './MultipleValueTextInput.module.css';\r\nimport { MultipleValueTextInputProps } from '../types';\r\nimport MultipleValueTextInputItem from './MultipleValueTextInputItem';\r\n\r\nconst propTypes = {\r\n\t/** Any values the input's collection should be prepopulated with. */\r\n\tvalues: PropTypes.arrayOf(PropTypes.string),\r\n\t/** Method which should be called when an item is added to the collection */\r\n\tonItemAdded: PropTypes.func.isRequired,\r\n\t/** Method which should be called when an item is removed from the collection */\r\n\tonItemDeleted: PropTypes.func.isRequired,\r\n\t/** Label to be attached to the input, if desired */\r\n\tlabel: PropTypes.string,\r\n\t/** Name attribute for the input */\r\n\tname: PropTypes.string.isRequired,\r\n\t/** Placeholder attribute for the input, if desired */\r\n\tplaceholder: PropTypes.string,\r\n\t/** ASCII charcode for the keys which should\r\n\t * trigger an item to be added to the collection (defaults to comma (44) and Enter (13))\r\n\t */\r\n\tsubmitKeys: PropTypes.arrayOf(PropTypes.string),\r\n\t/** JSX or string which will be used as the control to delete an item from the collection */\r\n\tdeleteButton: PropTypes.node,\r\n\t/** Whether or not the blur event should trigger the added-item handler */\r\n\tshouldAddOnBlur: PropTypes.bool,\r\n\t/** Custom class name for the input element */\r\n\tclassName: PropTypes.string,\r\n\t/** Custom class name for the input label element */\r\n\tlabelClassName: PropTypes.string\r\n};\r\n\r\n/**\r\n * A text input component for React which maintains and displays a collection\r\n * of entered values as an array of strings.\r\n */\r\nfunction MultipleValueTextInput({\r\n\tplaceholder = '',\r\n\tlabel = '',\r\n\tname,\r\n\tdeleteButton = <span>&times;</span>,\r\n\tonItemAdded = () => null,\r\n\tonItemDeleted = () => null,\r\n\tclassName = '',\r\n\tlabelClassName = '',\r\n\tsubmitKeys = ['Enter', ','],\r\n\tvalues: initialValues = [],\r\n\tshouldAddOnBlur,\r\n\t...forwardedProps\r\n}: MultipleValueTextInputProps) {\r\n\tconst [values, setValues] = useState(initialValues);\r\n\tconst [value, setValue] = useState('');\r\n\tconst nonCharacterKeyLabels: string[] = ['Enter','Tab']\r\n\tconst delimiters: string[] = submitKeys.filter( ( element ) => !nonCharacterKeyLabels.includes( element ) );\r\n\tconst handleValueChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(e.currentTarget.value);\r\n\t};\r\n\tconst handleItemAdd = (addedValue: string) => {\r\n\t\tif (values.includes(addedValue) || !addedValue) {\r\n\t\t\tsetValue('');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst newValues = values.concat(addedValue);\r\n\t\tsetValues(newValues);\r\n\t\tsetValue('');\r\n\t\tonItemAdded(value, newValues);\r\n\t};\r\n\tconst handleItemsAdd = (addedValues: string[]) => {\r\n\t\tconst uniqueValues = Array.from(new Set(addedValues.filter(elm => elm && !values.includes(elm))));\r\n\t\tif (uniqueValues.length > 0) {\r\n\t\t\tconst newValues = Array.from(new Set([...values, ...uniqueValues]));\r\n\t\t\tsetValues(newValues)\r\n\t\t\tsetValue('')\r\n\t\t\tuniqueValues.forEach((addedValue) => {\r\n\t\t\t\tonItemAdded(addedValue, newValues)\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tsetValue('')\r\n\t\t}\r\n\t};\r\n\tconst handleItemRemove = (removedValue: string) => {\r\n\t\tconst currentValues = values;\r\n\t\tconst newValues = currentValues.filter((v) => v !== removedValue);\r\n\t\tonItemDeleted(removedValue, newValues);\r\n\t\tsetValues(newValues);\r\n\t};\r\n\r\n\tconst handleKeypress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n\t\t// Defaults: Enter, Comma (e.key === 'Enter' or ',')\r\n\t\tif (submitKeys.includes(e.key)) {\r\n\t\t\te.preventDefault();\r\n\t\t\thandleItemAdd(e.currentTarget.value);\r\n\t\t}\r\n\t};\r\n\tconst handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n\t\tif (shouldAddOnBlur) {\r\n\t\t\te.preventDefault();\r\n\t\t\thandleItemAdd(e.target.value);\r\n\t\t}\r\n\t};\r\n\r\n\tconst splitMulti = (str: string) => {\r\n\t\tconst tempChar = delimiters[0] // We can use the first token as a temporary join character\r\n\t\tlet result: string = str\r\n\t\tfor (let i = 1; i < delimiters.length; i+=1) {\r\n\t\t\tresult = result.split(delimiters[i]).join(tempChar) // Handle scenarios where pasted text has more than one submitKeys in it\r\n\t\t}\r\n\t\treturn result.split(tempChar)\r\n\t}\r\n\r\n\tconst handlePaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\r\n\t\tconst pastedText = e.clipboardData.getData('text/plain')\r\n\t\tconst areSubmitKeysPresent = delimiters.some((d) => pastedText.includes(d));\r\n\t\tif (areSubmitKeysPresent) {\r\n\t\t\tconst splitTerms = splitMulti(pastedText)\r\n\t\t\tif (splitTerms.length > 0) {\r\n\t\t\t\te.preventDefault()\r\n\t\t\t\thandleItemsAdd(splitTerms)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst valueDisplays = values.map((v) => (\r\n\t\t<MultipleValueTextInputItem\r\n\t\t\tvalue={v}\r\n\t\t\tkey={v}\r\n\t\t\tdeleteButton={deleteButton}\r\n\t\t\thandleItemRemove={handleItemRemove}\r\n\t\t/>\r\n\t));\r\n\treturn (\r\n\t\t<div className=\"multiple-value-text-input\" role=\"form\">\r\n\t\t\t<label\r\n\t\t\t\thtmlFor={name}\r\n\t\t\t\tclassName={`${labelClassName} ${styles.inputLabel}`}\r\n\t\t\t\tdata-testid=\"label\"\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t\t<div className=\"multiple-value-text-input-item-container\">\r\n\t\t\t\t\t{values.length > 0 && <p role=\"list\">{valueDisplays}</p>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<input\r\n\t\t\t\t\taria-label={label}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonKeyPress={handleKeypress}\r\n\t\t\t\t\tonChange={handleValueChange}\r\n\t\t\t\t\tonPaste={handlePaste}\r\n\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\tclassName={`${className} ${styles.inputElement}`}\r\n\t\t\t\t\t{...forwardedProps}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nMultipleValueTextInput.propTypes = propTypes;\r\nexport default MultipleValueTextInput;\r\n", "\nconst digest = '9f3ac51bbda4a16bcb2d1a247020d5933de8432de22384baad7e6733ee24263c';\nconst css = `._inputElement_jafxa_1,\r\n._inputLabel_jafxa_3 {\r\n\twidth: 100%;\r\n}\r\n`;\n\n(function() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  if (!document.getElementById(digest)) {\n    var el = document.createElement('style');\n    el.id = digest;\n    el.textContent = css;\n    document.head.appendChild(el);\n  }\n})();\n    \nexport default {\"inputElement\":\"_inputElement_jafxa_1\",\"inputLabel\":\"_inputLabel_jafxa_3\"};\nexport { css, digest };\n  ", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { MultipleValueTextInputItemProps } from '../types';\r\nimport styles from './MultipleValueTextInputItem.module.css';\r\n\r\nconst propTypes = {\r\n\tvalue: PropTypes.string.isRequired,\r\n\thandleItemRemove: PropTypes.func.isRequired,\r\n\tdeleteButton: PropTypes.node.isRequired\r\n};\r\n\r\nconst MultipleValueTextInputItem = (props: MultipleValueTextInputItemProps) => {\r\n\tconst { value, handleItemRemove, deleteButton } = props;\r\n\treturn (\r\n\t\t<span className={`multiple-value-text-input-item ${styles.inputItem}`} role=\"listitem\">\r\n\t\t\t<span data-testid=\"value\">{value}</span>{' '}\r\n\t\t\t<span\r\n\t\t\t\tclassName={`multiple-value-text-input-item-button ${styles.deleteButton}`}\r\n\t\t\t\tdata-value={value}\r\n\t\t\t\ttabIndex={-1}\r\n\t\t\t\trole=\"button\"\r\n\t\t\t\tonKeyUp={() => handleItemRemove(value)}\r\n\t\t\t\tonClick={() => handleItemRemove(value)}\r\n\t\t\t>\r\n\t\t\t\t{deleteButton}\r\n\t\t\t</span>\r\n\t\t</span>\r\n\t);\r\n};\r\n\r\nMultipleValueTextInputItem.propTypes = propTypes;\r\nexport default MultipleValueTextInputItem;\r\n", "\nconst digest = '134b518ff70f4774f0f133bf29dbf64e1a4c9f0ab138794fcf8280549479874f';\nconst css = `._inputItem_18w4i_1 {\r\n\tpadding: 5px;\r\n\tbackground: #ccc;\r\n\tmargin-right: 5px;\r\n}\r\n._deleteButton_18w4i_11 {\r\n\tcursor: pointer;\r\n}\r\n`;\n\n(function() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  if (!document.getElementById(digest)) {\n    var el = document.createElement('style');\n    el.id = digest;\n    el.textContent = css;\n    document.head.appendChild(el);\n  }\n})();\n    \nexport default {\"inputItem\":\"_inputItem_18w4i_1\",\"deleteButton\":\"_deleteButton_18w4i_11\"};\nexport { css, digest };\n  ", "import MultipleValueTextInput from './components/MultipleValueTextInput';\r\n\r\nexport default MultipleValueTextInput;\r\n"],
  "mappings": "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",
  "names": []
}
